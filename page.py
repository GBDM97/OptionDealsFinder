import time
import browser
import clearScript
import pandas as pd
import streamlit as st

# browser.start()

data = [[11.65, 'ABEVO122(11.65)', 0.1, 'ABEVO120(11.4)', 0.01, 2.7777777777777772, 11.525], [11.9, 'ABEVO125(11.9)', 0.09, 'ABEVO120(11.4)', 0.01, 6.25, 11.525], [11.9, 'ABEVO125(11.9)', 0.09, 'ABEVO122(11.65)', 0.01, 3.125, 9.585], [12.15, 'ABEVO127(12.15)', 0.05, 'ABEVO120(11.4)', 0.01, 18.75, 11.525], [12.15, 'ABEVO127(12.15)', 0.05, 'ABEVO122(11.65)', 0.01, 12.5, 9.585], [12.15, 'ABEVO127(12.15)', 0.05, 'ABEVO125(11.9)', 0.02, 8.333333333333332, 7.645], [12.4, 'ABEVO130(12.4)', 0.2, 'ABEVO120(11.4)', 0.01, 5.2631578947368425, 11.525], [12.4, 'ABEVO130(12.4)', 0.2, 'ABEVO122(11.65)', 0.01, 3.9473684210526314, 9.585], [12.4, 'ABEVO130(12.4)', 0.2, 'ABEVO125(11.9)', 0.02, 2.7777777777777772, 7.645], [12.4, 'ABEVO130(12.4)', 0.2, 'ABEVO127(12.15)', 0.03, 1.4705882352941175, 5.704], [12.65, 'ABEVO132(12.65)', 0.21, 'ABEVO120(11.4)', 0.01, 6.250000000000001, 11.525], [12.65, 'ABEVO132(12.65)', 0.21, 'ABEVO122(11.65)', 0.01, 5.0, 9.585], [12.65, 'ABEVO132(12.65)', 0.21, 'ABEVO125(11.9)', 0.02, 3.9473684210526314, 7.645], [12.65, 
'ABEVO132(12.65)', 0.21, 'ABEVO127(12.15)', 0.03, 2.7777777777777777, 5.704], [12.65, 'ABEVO132(12.65)', 0.21, 'ABEVO130(12.4)', 0.06, 1.6666666666666667, 3.764], [12.9, 'ABEVC135(12.9)', 0.35, 'ABEVC137(13.15)', 0.15, 1.25, 2.057], [12.9, 'ABEVC135(12.9)', 0.35, 'ABEVC140(13.4)', 0.09, 1.923076923076923, 3.997], [12.9, 'ABEVC135(12.9)', 0.35, 'ABEVC142(13.65)', 0.05, 2.5, 5.937], [12.9, 'ABEVC135(12.9)', 0.35, 'ABEVC145(13.9)', 0.03, 3.1250000000000004, 7.877], [12.9, 'ABEVC135(12.9)', 0.35, 'ABEVC147(14.15)', 0.02, 3.7878787878787885, 9.818], [12.9, 'ABEVC135(12.9)', 0.35, 'ABEVC154(14.2)', 0.02, 3.9393939393939372, 10.206], [12.9, 'ABEVC135(12.9)', 0.35, 'ABEVC149(14.4)', 0.01, 4.411764705882353, 11.758], [12.9, 'ABEVC135(12.9)', 0.35, 'ABEVC150(14.45)', 0.01, 4.558823529411762, 12.146], [12.9, 'ABEVC135(12.9)', 0.35, 'ABEVC151(14.65)', 0.01, 5.147058823529412, 13.698], [12.9, 'ABEVC135(12.9)', 0.35, 'ABEVC152(14.7)', 0.01, 5.294117647058821, 14.086], [12.9, 'ABEVC135(12.9)', 0.35, 'ABEVC155(14.9)', 0.01, 5.882352941176471, 15.638], [13.15, 'ABEVC137(13.15)', 0.3, 'ABEVC140(13.4)', 0.09, 1.1904761904761905, 3.997], [13.15, 'ABEVC137(13.15)', 0.3, 'ABEVC142(13.65)', 0.05, 2.0, 5.937], [13.15, 'ABEVC137(13.15)', 0.3, 'ABEVC145(13.9)', 0.03, 2.7777777777777772, 7.877], [13.15, 'ABEVC137(13.15)', 0.3, 'ABEVC147(14.15)', 0.02, 3.5714285714285716, 9.818], [13.15, 'ABEVC137(13.15)', 0.3, 'ABEVC154(14.2)', 0.02, 3.749999999999997, 10.206], [13.15, 'ABEVC137(13.15)', 0.3, 'ABEVC149(14.4)', 0.01, 4.310344827586207, 11.758], [13.15, 'ABEVC137(13.15)', 0.3, 'ABEVC150(14.45)', 0.01, 4.482758620689651, 12.146], 
[13.15, 'ABEVC137(13.15)', 0.3, 'ABEVC151(14.65)', 0.01, 5.172413793103448, 13.698], [13.15, 'ABEVC137(13.15)', 0.3, 'ABEVC152(14.7)', 0.01, 5.344827586206893, 14.086], [13.15, 'ABEVC137(13.15)', 0.3, 'ABEVC155(14.9)', 0.01, 6.03448275862069, 15.638], [13.4, 'ABEVC140(13.4)', 0.14, 'ABEVC142(13.65)', 0.05, 2.7777777777777772, 5.937], [13.4, 'ABEVC140(13.4)', 0.14, 'ABEVC145(13.9)', 0.03, 4.545454545454545, 7.877], [13.4, 'ABEVC140(13.4)', 0.14, 'ABEVC147(14.15)', 0.02, 6.25, 9.818], [13.4, 'ABEVC140(13.4)', 0.14, 'ABEVC154(14.2)', 0.02, 6.666666666666657, 10.206], [13.4, 'ABEVC140(13.4)', 0.14, 'ABEVC149(14.4)', 0.01, 7.692307692307692, 11.758], [13.4, 'ABEVC140(13.4)', 0.14, 'ABEVC150(14.45)', 0.01, 8.076923076923068, 12.146], [13.4, 'ABEVC140(13.4)', 0.14, 'ABEVC151(14.65)', 0.01, 9.615384615384615, 13.698], [13.4, 'ABEVC140(13.4)', 0.14, 'ABEVC152(14.7)', 0.01, 9.999999999999991, 14.086], [13.4, 'ABEVC140(13.4)', 0.14, 'ABEVC155(14.9)', 0.01, 11.538461538461538, 15.638], [13.65, 'ABEVC142(13.65)', 0.09, 'ABEVC145(13.9)', 0.03, 4.166666666666667, 7.877], [13.65, 'ABEVC142(13.65)', 0.09, 'ABEVC147(14.15)', 0.02, 7.142857142857143, 9.818], [13.65, 'ABEVC142(13.65)', 0.09, 'ABEVC154(14.2)', 0.02, 7.8571428571428426, 10.206], [13.65, 'ABEVC142(13.65)', 0.09, 'ABEVC149(14.4)', 0.01, 9.375, 11.758], [13.65, 'ABEVC142(13.65)', 0.09, 'ABEVC150(14.45)', 0.01, 9.999999999999988, 12.146], [13.65, 'ABEVC142(13.65)', 0.09, 'ABEVC151(14.65)', 0.01, 12.5, 13.698], [13.65, 'ABEVC142(13.65)', 0.09, 'ABEVC152(14.7)', 0.01, 13.124999999999988, 14.086], [13.65, 'ABEVC142(13.65)', 0.09, 'ABEVC155(14.9)', 0.01, 15.625, 15.638], [13.9, 'ABEVC145(13.9)', 0.04, 'ABEVC147(14.15)', 0.02, 12.5, 9.818], [13.9, 'ABEVC145(13.9)', 0.04, 'ABEVC154(14.2)', 0.02, 14.999999999999947, 10.206], [13.9, 'ABEVC145(13.9)', 0.04, 'ABEVC149(14.4)', 0.01, 16.666666666666668, 11.758], [13.9, 'ABEVC145(13.9)', 0.04, 'ABEVC150(14.45)', 
0.01, 18.3333333333333, 12.146], [13.9, 'ABEVC145(13.9)', 0.04, 'ABEVC151(14.65)', 0.01, 25.0, 13.698], [13.9, 'ABEVC145(13.9)', 0.04, 'ABEVC152(14.7)', 0.01, 26.666666666666632, 14.086], [13.9, 'ABEVC145(13.9)', 0.04, 'ABEVC155(14.9)', 0.01, 33.333333333333336, 15.638], [14.15, 'ABEVC147(14.15)', 0.03, 'ABEVC154(14.2)', 0.02, 4.999999999999894, 10.206], [14.15, 'ABEVC147(14.15)', 0.03, 'ABEVC149(14.4)', 0.01, 12.500000000000002, 11.758], [14.15, 'ABEVC147(14.15)', 0.03, 'ABEVC150(14.45)', 0.01, 14.99999999999995, 12.146], [14.15, 'ABEVC147(14.15)', 0.03, 'ABEVC151(14.65)', 0.01, 25.000000000000004, 13.698], [14.15, 'ABEVC147(14.15)', 0.03, 'ABEVC152(14.7)', 0.01, 27.49999999999995, 14.086], [14.15, 'ABEVC147(14.15)', 0.03, 'ABEVC155(14.9)', 0.01, 37.50000000000001, 15.638], [14.2, 'ABEVC154(14.2)', 0.05, 'ABEVC149(14.4)', 0.01, 5.000000000000027, 11.758], [14.2, 'ABEVC154(14.2)', 0.05, 'ABEVC150(14.45)', 0.01, 6.25, 12.146], [14.2, 'ABEVC154(14.2)', 0.05, 'ABEVC151(14.65)', 0.01, 11.250000000000027, 13.698], [14.2, 'ABEVC154(14.2)', 0.05, 'ABEVC152(14.7)', 0.01, 12.5, 14.086], [14.2, 'ABEVC154(14.2)', 0.05, 'ABEVC155(14.9)', 0.01, 17.500000000000025, 15.638], [14.4, 'ABEVC149(14.4)', 0.12, 'ABEVC150(14.45)', 0.01, 0.45454545454544487, 12.146], [14.4, 'ABEVC149(14.4)', 0.12, 'ABEVC151(14.65)', 0.01, 2.272727272727273, 13.698], [14.4, 'ABEVC149(14.4)', 0.12, 'ABEVC152(14.7)', 0.01, 2.7272727272727177, 14.086], [14.4, 'ABEVC149(14.4)', 0.12, 'ABEVC155(14.9)', 0.01, 4.545454545454546, 15.638], [14.45, 'ABEVC150(14.45)', 0.03, 'ABEVC151(14.65)', 0.01, 10.000000000000055, 13.698], [14.45, 'ABEVC150(14.45)', 0.03, 'ABEVC152(14.7)', 0.01, 12.500000000000002, 14.086], [14.45, 'ABEVC150(14.45)', 0.03, 'ABEVC155(14.9)', 0.01, 22.500000000000057, 15.638], [14.65, 'ABEVC151(14.65)', 0.06, 'ABEVC152(14.7)', 0.01, 0.9999999999999787, 14.086], [14.65, 'ABEVC151(14.65)', 0.06, 'ABEVC155(14.9)', 0.01, 5.0, 15.638], [14.7, 'ABEVC152(14.7)', 0.02, 'ABEVC155(14.9)', 0.01, 20.000000000000107, 15.638], [10.0, 'AESBO100(10.0)', 0.25, 'AESBO990(9.9)', 0.01, 0.41666666666666524, 6.604], [11.0, 'AESBC110(11.0)', 0.29, 'AESBC115(11.5)', 0.02, 1.851851851851852, 8.491], [11.0, 'AESBC110(11.0)', 0.29, 'AESBC120(12.0)', 0.02, 3.703703703703704, 13.208], [11.5, 'AESBC115(11.5)', 0.1, 'AESBC120(12.0)', 0.02, 6.25, 13.208]]

def colorFn(v):
    if v.name == 'Buy':
        return ['color: deepSkyBlue'] * len(v)
    if v.name == 'Sell':
        return ['color: red'] * len(v)

with st.empty():
    while True:
        
        # driver = browser.getDriver()
        # if driver:
            # input("input")
            # df = pd.DataFrame(clearScript.getLockOutput(driver), columns=['Profit Level','Buy','Buy Price', 'Sell', 'Sell Price', 'Multiplication', 'Percentage To Max. Profit'])
            df = pd.DataFrame(data, columns=['Profit Level','Buy','Buy Price',
                                              'Sell', 'Sell Price', 'Multiplication', 'Percentage To Max. Profit'])
            df = df.style.apply(colorFn, subset=(slice(None),['Buy','Sell'])
            ).applymap(lambda x: 'color: lime' if float(x) >= 5 else None, subset=(slice(None),['Multiplication'])).applymap(
                 lambda x: 'color: lime' if float(x) <= 4 else None, subset=(slice(None),['Percentage To Max. Profit']))
            st.dataframe(df, hide_index=True, width=1100, height=500)
            # input("input")
        # else:
            # st.write('LOADING....')

        # time.sleep(1)